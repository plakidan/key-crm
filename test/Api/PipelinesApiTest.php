<?php
/**
 * PipelinesApiTest
 * PHP version 7.4
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * KeyCRM OpenAPI documentation
 *
 * Опис REST маршрутів для роботи з KeyCRM OpenAPI.<br><br> <b>Зверніть увагу:</b> <br> 1. Для авторизації потрібно передавати заголовок у форматі Bearer + <a href=\"https://help.keycrm.app/uk/process-automation-api-and-more/where-to-get-an-api-key\" target=\"_blank\">APIkey</a> (authorization:[Bearer `ваш-API-ключ`]); <br> 2. Є обмеження до 60 запитів на хвилину з однієї IP-адреси по API-ключу; <br> 3. Час у всіх сутностях використовується UTC (GMT+0) - при зчитуванні (GET-запити), при виборі (фільтрації) по часу створення сутності, а також при створенні сутностей (POST).
 *
 * The version of the OpenAPI document: 1.2.0
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.10.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace OpenAPI\Client\Test\Api;

use \OpenAPI\Client\Configuration;
use \OpenAPI\Client\ApiException;
use \OpenAPI\Client\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * PipelinesApiTest Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class PipelinesApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for attachFileToPipelinesCard
     *
     * Додавання файлу до картки у воронці.
     *
     */
    public function testAttachFileToPipelinesCard()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createNewPipelineCard
     *
     * Створення нової картки у воронці.
     *
     */
    public function testCreateNewPipelineCard()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createNewPipelinesCardPayment
     *
     * Додавання нової оплати для існуючої картки у воронці.
     *
     */
    public function testCreateNewPipelinesCardPayment()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteFileFromCard
     *
     * Видалення файлу з картки воронки.
     *
     */
    public function testDeleteFileFromCard()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getPaginatedListOfPipelines
     *
     * Отримання списку воронок.
     *
     */
    public function testGetPaginatedListOfPipelines()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getPaginatedListOfPipelinesCards
     *
     * Отримання списку карток воронок.
     *
     */
    public function testGetPaginatedListOfPipelinesCards()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getPaginatedListOfPipelinesStatuses
     *
     * Отримання статусів воронки.
     *
     */
    public function testGetPaginatedListOfPipelinesStatuses()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getPipelinesCard
     *
     * Отримання картки воронки.
     *
     */
    public function testGetPipelinesCard()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateExistingPipelinesCardPayment
     *
     * Оновлення оплати для існуючої картки у воронці.
     *
     */
    public function testUpdateExistingPipelinesCardPayment()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updatePipelinesCard
     *
     * Оновлення картки воронки.
     *
     */
    public function testUpdatePipelinesCard()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }
}
